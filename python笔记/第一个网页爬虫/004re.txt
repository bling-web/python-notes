

  re是python使用正则表达式的第三方包.
 
一.常用函数.
    1.search()
       匹配符合字符串表达式的第一个字符串,返回match对象.
    2.findall()
       匹配符合字符串表达式的所有字符串,返回一个列表
    3.sub()
       在一个字符串中替换所有匹配正则表达式的字串,返回替换后的字符串.

  


二.模式.
    通过re可以直接设定一些匹配设置,非常方便.
    修饰符                  描述
    re.l               使匹配对大小写不敏感
    re.L              做本地化识别,匹配.
    re.M             多行匹配,影响^和$,忽略换行
    re.S              使.匹配包括换行在内的所有字符
    re.U              使用Unicode字符集解析字符,这个标志影响\w,\W,\b,\B
    re.X              该标志通过给与你更灵活的格式以便你将正则表达式写的更容易理解.


三.举例使用.
    1.方式一:
       构建需要匹配正则表达式规则的对象.
       pat=re.compile("[a-z]")      #pat是规则
       print(pat.search('123a'))      #123s是被匹配的字符串
       如果返回对象就是有匹配到,返回None就是没有匹配到.
    2.方式二:
       直接在方法中写.
       print(re.search('a','asdhasdjad'))  #左边a是规则,右边字符串是被匹配的字符串,找出第一个a
       print(re.findall('a','asdhasdjad'))  #左边a是规则,右边字符串是被匹配的字符串,找出所有的a
  
       print(re.sub('a','A','ADsdas'))     #第一个是被替换字符,第二个是替换字符,第三个是文本.
       打印结果:ADsdAs



注意:使用正则的时候,通常在前面会加上r,避免\被转义.如re.compile(r"\w")
  
       

      