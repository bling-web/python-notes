一.字符和编码的转换.
    ord转换为编码.
       ord('A')  结果为65.
    chr转换为字符.
       chr(65) 结果为'A'
 
        python默认的编码是unicode编码,它是一个全宇宙统一的编码.所以python还支持大部分的文字,
     所以你甚至可以用汉字做变量,但是强烈不介意这么做.(其实java也可以,因为java用utf-8编码,utf-8是unicode的一种实现方式)
        


二.字符串的比较.(在JAVA中不能比较字符串的大小)
    根据字符对应的编码进行比较.
    基于以上,更为惊奇的是你可以比较两个汉字的大小.
    1.对于两个字符串比较,从前往后依次比较两个字符,分出胜负为止.
       比如"abs">"abc"  结果为True.
              "abs">"ab"    结果为True. 
       其实基于以上得到的顺序就是字典序.

三.常见函数与方法
    函数就类似于JAVA中的静态方法,直接通过名称调用.
    方法就类似方法,需要通过对象来进行调用.
    1.函数
       (1)求长度
           len("abc")  结果为3	
    2.方法.
       (1)判断字符串开头.startswith()
           str='abc'
           str.startswith('a')-->True
           str.startswith('ab')-->True
        (2)判断字符串结尾.endswith()
            str='abc'
            str.endswith('bc')-->True
        (3)计算字符串中包含某一字符的个数.
            str.count('a')-->1
        (4)将列表(在java中是数组)用固定字符拼接成字符串
             list=['a','b','c']
             ';'.join(list)-->a;b;c
        (5)替换大括号中的内容,通常用在输出函数中.
            a=1
            b=2
            c=3
            '{}{}{}'.format(a,b,c)-->'123'   //普通替换
            '{2}{1}{0}'.format(a,b,c)-->'321'   //指定顺序
            '{first}{second}{third}'.format(third=a,first=b,second=c)-->'231'   //指定名称
            '{:.2f}'.format(74/13)-->'5.69'   //指定浮点数后保留两位小数	


      

四.字符串的截取
    1.在python中,字符串可以看作一个数组来用,可以直接通过下标找到对应的值.
        例:str="abc"
            str[0]='a'       
      这里更为特殊的是还有负数下标,即从后往前数,从-1开始,即最后一个字符的下标为-1.
            str[-1]='c'
     也可以很方便的进行字符串截取.
         str[:1]   结果为'a'
         str[1:2]  结果为'b'    因为取值的区间是前闭后开的区间.
         str[1:-1]  结果为'b	'
         str[:]   结果为'abc'
  
五.字符串运算.
     1.加号.
        和Java一样,表示两个字符串拼接.
     2.乘号*.
        表示该字符串重复的个数.
        "abc"*3   结果为'abcabcabc'
        必须有一个是int类型的整数
     3.in 是否包含. 
        'a' in 'abc'  为True
        'a' not in 'abc' 为False

六.字符串的驻留机制.
     如果在内存中已经定义了一个字符串,再定义一个变量指向相同的字符串,则不会去创建一个新的字符串,而是两个变量共用一个字符串.
     举例:
            >>> str1='stenwaves'
            >>> str2='stenwaves'
            >>> str1 is str2
            True
            >>> id(str1)
            2072034398512
            >>> id(str2)
            2072034398512

      需要注意的是驻留机制仅限于仅由数字,字符和下划线组成的字符串,比如包含空格则不适用.
      举例:
            >>> str1='a b'
            >>> str2='a b'
            >>> str1 is str2
            False

            